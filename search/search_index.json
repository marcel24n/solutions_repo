{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction Technical setup Install Visual Studio Code from here Install folowing extensions in Visual Studio Code: Github Repositories (GitHub, Inc.) GitHub Copilot (GitHub Copilot) GitHub Actions (GitHub, Inc.) Python (Microsoft) Useful links Python Miniconda Documentation Google Colab How to use this repository Below are the steps you need to follow: Create a GitHub account if you don\u2019t have one. Fork this repository to your account. Enable the Issues tab: Go to the Settings tab and check the Issues option. Add your professor as a collaborator: Go to the Settings tab and add their GitHub username in the Collaborators section. Install python: Download Source Code & WWW GitHub repo WWW Where can I find the problems? Please visit the Mathematics Physics Lectures website. Physics Mathematics Discret Mathematics","title":"Introduction"},{"location":"#introduction","text":"","title":"Introduction"},{"location":"#technical-setup","text":"Install Visual Studio Code from here Install folowing extensions in Visual Studio Code: Github Repositories (GitHub, Inc.) GitHub Copilot (GitHub Copilot) GitHub Actions (GitHub, Inc.) Python (Microsoft)","title":"Technical setup"},{"location":"#useful-links","text":"Python Miniconda Documentation Google Colab","title":"Useful links"},{"location":"#how-to-use-this-repository","text":"Below are the steps you need to follow: Create a GitHub account if you don\u2019t have one. Fork this repository to your account. Enable the Issues tab: Go to the Settings tab and check the Issues option. Add your professor as a collaborator: Go to the Settings tab and add their GitHub username in the Collaborators section. Install python: Download Source Code & WWW GitHub repo WWW","title":"How to use this repository"},{"location":"#where-can-i-find-the-problems","text":"Please visit the Mathematics Physics Lectures website. Physics Mathematics Discret Mathematics","title":"Where can I find the problems?"},{"location":"1%20Physics/1%20Mechanics/Problem_1/","text":"Problem 1 \ud83d\udcd8 1. Theoretical Foundation We start with the equations of projectile motion , assuming: - No air resistance - Launched from ground level - Constant gravitational acceleration g = 9.81 m/s\u00b2 \u25b6\ufe0f Basic Kinematic Equations: Let a projectile be launched with: - Initial velocity: \\( v_0 \\) - Angle of projection: \\( \\theta \\) - From: \\( y_0 = 0 \\) Split into horizontal and vertical components: - \\( v_{x} = v_0 \\cos\\theta \\) - \\( v_{y} = v_0 \\sin\\theta \\) Time of flight (when projectile returns to ground): \\[ t_{\\text{flight}} = \\frac{2v_0 \\sin\\theta}{g} \\] Horizontal Range: \\[ R = v_{x} \\cdot t_{\\text{flight}} = v_0 \\cos\\theta \\cdot \\left(\\frac{2v_0 \\sin\\theta}{g}\\right) \\] \\[ \\boxed{R = \\frac{v_0^2 \\sin(2\\theta)}{g}} \\] This shows the range depends on \\( \\sin(2\\theta) \\) \u2014 maximum at \\( \\theta = 45^\\circ \\) . \ud83d\udcc8 2. Analysis of the Range \ud83d\udccc Insights: Maximum range occurs at \\( \\theta = 45^\\circ \\) For angles \\( \\theta \\) and \\( 90^\\circ - \\theta \\) , the range is the same The range increases with initial velocity \\( v_0 \\) , and decreases with gravity \\( g \\) \ud83d\udd27 3. Practical Applications This simple model works great when: - You launch from a flat surface - No air resistance But real life is messy! Consider: - Launch from a height (e.g., cliff or hill) - Uneven ground or slopes - Air drag (which heavily alters the trajectory) - Wind forces or spin (like a baseball or golf ball) In those cases, we\u2019d modify our model with: - Drag force: \\( F_d = -kv \\) - Numerical simulation (Euler or Runge-Kutta) \ud83d\udcbb 4. Implementation (Python Script) Let\u2019s implement a simulation and plot Range vs Angle for different velocities. import numpy as np import matplotlib.pyplot as plt # Constants g = 9.81 # gravity (m/s^2) angles = np.radians(np.linspace(0, 90, 500)) # angles in radians # Initial velocities to compare velocities = [10, 20, 30] # m/s plt.figure(figsize=(10, 6)) for v0 in velocities: ranges = (v0 ** 2) * np.sin(2 * angles) / g plt.plot(np.degrees(angles), ranges, label=f'v\u2080 = {v0} m/s') plt.title('Projectile Range vs Angle of Projection') plt.xlabel('Angle (degrees)') plt.ylabel('Range (meters)') plt.legend() plt.grid(True) plt.show()","title":"Problem 1"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#1-theoretical-foundation","text":"We start with the equations of projectile motion , assuming: - No air resistance - Launched from ground level - Constant gravitational acceleration g = 9.81 m/s\u00b2","title":"\ud83d\udcd8 1. Theoretical Foundation"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#basic-kinematic-equations","text":"Let a projectile be launched with: - Initial velocity: \\( v_0 \\) - Angle of projection: \\( \\theta \\) - From: \\( y_0 = 0 \\) Split into horizontal and vertical components: - \\( v_{x} = v_0 \\cos\\theta \\) - \\( v_{y} = v_0 \\sin\\theta \\)","title":"\u25b6\ufe0f Basic Kinematic Equations:"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#time-of-flight-when-projectile-returns-to-ground","text":"\\[ t_{\\text{flight}} = \\frac{2v_0 \\sin\\theta}{g} \\]","title":"Time of flight (when projectile returns to ground):"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#horizontal-range","text":"\\[ R = v_{x} \\cdot t_{\\text{flight}} = v_0 \\cos\\theta \\cdot \\left(\\frac{2v_0 \\sin\\theta}{g}\\right) \\] \\[ \\boxed{R = \\frac{v_0^2 \\sin(2\\theta)}{g}} \\] This shows the range depends on \\( \\sin(2\\theta) \\) \u2014 maximum at \\( \\theta = 45^\\circ \\) .","title":"Horizontal Range:"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#2-analysis-of-the-range","text":"","title":"\ud83d\udcc8 2. Analysis of the Range"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#insights","text":"Maximum range occurs at \\( \\theta = 45^\\circ \\) For angles \\( \\theta \\) and \\( 90^\\circ - \\theta \\) , the range is the same The range increases with initial velocity \\( v_0 \\) , and decreases with gravity \\( g \\)","title":"\ud83d\udccc Insights:"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#3-practical-applications","text":"This simple model works great when: - You launch from a flat surface - No air resistance But real life is messy! Consider: - Launch from a height (e.g., cliff or hill) - Uneven ground or slopes - Air drag (which heavily alters the trajectory) - Wind forces or spin (like a baseball or golf ball) In those cases, we\u2019d modify our model with: - Drag force: \\( F_d = -kv \\) - Numerical simulation (Euler or Runge-Kutta)","title":"\ud83d\udd27 3. Practical Applications"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#4-implementation-python-script","text":"Let\u2019s implement a simulation and plot Range vs Angle for different velocities. import numpy as np import matplotlib.pyplot as plt # Constants g = 9.81 # gravity (m/s^2) angles = np.radians(np.linspace(0, 90, 500)) # angles in radians # Initial velocities to compare velocities = [10, 20, 30] # m/s plt.figure(figsize=(10, 6)) for v0 in velocities: ranges = (v0 ** 2) * np.sin(2 * angles) / g plt.plot(np.degrees(angles), ranges, label=f'v\u2080 = {v0} m/s') plt.title('Projectile Range vs Angle of Projection') plt.xlabel('Angle (degrees)') plt.ylabel('Range (meters)') plt.legend() plt.grid(True) plt.show()","title":"\ud83d\udcbb 4. Implementation (Python Script)"},{"location":"1%20Physics/1%20Mechanics/Problem_2/","text":"Problem 2 Here is a full solution to your Forced Damped Pendulum project \u2014 including theoretical derivation, dynamic analysis, real-world relevance, and a Python implementation with plots and exploration tools. Ready to copy into a Markdown or Jupyter notebook! \ud83c\udf00 Investigating the Dynamics of a Forced Damped Pendulum \ud83d\udcd8 1. Theoretical Foundation Equation of Motion The motion of a forced damped pendulum is described by the nonlinear second-order differential equation: \\[ \\frac{d^2\\theta}{dt^2} + \\gamma \\frac{d\\theta}{dt} + \\omega_0^2 \\sin\\theta = A \\cos(\\omega t) \\] Where: - \\(\\theta(t)\\) : angular displacement - \\(\\gamma\\) : damping coefficient - \\(\\omega_0 = \\sqrt{g/L}\\) : natural angular frequency - \\(A\\) : amplitude of external forcing - \\(\\omega\\) : angular frequency of the driving force Small-Angle Approximation For small oscillations ( \\(\\theta \\ll 1\\) ), we use \\(\\sin\\theta \\approx \\theta\\) , simplifying the equation to: \\[ \\frac{d^2\\theta}{dt^2} + \\gamma \\frac{d\\theta}{dt} + \\omega_0^2 \\theta = A \\cos(\\omega t) \\] This is a driven damped harmonic oscillator , solvable analytically. General Solution (Small Angles) The solution consists of: - Transient (decays due to damping) - Steady-state (driven solution): \\[ \\theta(t) = \\theta_0 e^{-\\gamma t/2} \\cos(\\Omega t + \\phi) + B \\cos(\\omega t - \\delta) \\] Where: - \\(B = \\frac{A}{\\sqrt{(\\omega_0^2 - \\omega^2)^2 + (\\gamma \\omega)^2}}\\) - \\(\\delta = \\tan^{-1}\\left(\\frac{\\gamma \\omega}{\\omega_0^2 - \\omega^2}\\right)\\) Resonance Condition Occurs when driving frequency \\(\\omega \\approx \\omega_0\\) . - System absorbs maximum energy. - Amplitude \\(B\\) reaches a peak. - Damping reduces resonance sharpness. \ud83d\udd2c 2. Analysis of Dynamics Effect of Parameters Damping \\(\\gamma\\) : Low \\(\\gamma\\) : sustained oscillations. High \\(\\gamma\\) : motion dies out quickly. Driving Amplitude \\(A\\) : Small \\(A\\) : linear-like motion. Large \\(A\\) : complex, possibly chaotic behavior. Driving Frequency \\(\\omega\\) : Near resonance \u2192 large response. Far from resonance \u2192 low amplitude. Regular vs Chaotic Motion Regular : predictable, periodic or quasiperiodic. Chaotic : sensitive to initial conditions, irregular, non-repeating. Transition to chaos happens by increasing \\(A\\) or tuning \\(\\omega\\) . \ud83e\udde0 3. Real-World Applications Application Description \ud83c\udfd7\ufe0f Suspension Bridges External forcing (wind, traffic) causes oscillations \u26a1 RLC Circuits Analogous to pendulum with inductance/resistance \ud83d\udeb6 Biomechanics Human gait as forced pendulum \u2699\ufe0f Energy Harvesting Uses resonance for maximizing power \ud83d\udcbb 4. Python Implementation (Simulation) Below is a Python script using scipy and matplotlib . \ud83d\udd27 Required Libraries import numpy as np import matplotlib.pyplot as plt from scipy.integrate import solve_ivp \ud83d\udd01 Simulation Function # Parameters gamma = 0.1 # damping omega0 = 1.5 # natural frequency (sqrt(g/L)) A = 1.2 # driving amplitude omega = 2/3 # driving frequency def pendulum(t, y): theta, dtheta = y d2theta = -gamma * dtheta - omega0**2 * np.sin(theta) + A * np.cos(omega * t) return [dtheta, d2theta] \ud83e\uddea Solve the Equation # Initial conditions theta0 = 0.2 dtheta0 = 0.0 t_span = (0, 100) t_eval = np.linspace(*t_span, 5000) sol = solve_ivp(pendulum, t_span, [theta0, dtheta0], t_eval=t_eval) \ud83d\udcc8 Plot Time Evolution plt.figure(figsize=(10,4)) plt.plot(sol.t, sol.y[0], label='\u03b8(t)') plt.title('Forced Damped Pendulum - Angular Displacement Over Time') plt.xlabel('Time') plt.ylabel('Angle (rad)') plt.grid(True) plt.legend() plt.show() \ud83c\udf0c Phase Portrait plt.figure(figsize=(6,6)) plt.plot(sol.y[0], sol.y[1], lw=0.5) plt.title('Phase Portrait: \u03b8 vs d\u03b8/dt') plt.xlabel('\u03b8 (rad)') plt.ylabel('Angular velocity (rad/s)') plt.grid(True) plt.show() \ud83c\udf00 Poincar\u00e9 Section Sample the state every period of the driving force: T_drive = 2 * np.pi / omega sample_times = np.arange(0, 100, T_drive) theta_samples = [] omega_samples = [] for t_sample in sample_times: index = np.abs(sol.t - t_sample).argmin() theta_samples.append(sol.y[0][index]) omega_samples.append(sol.y[1][index]) plt.figure(figsize=(6,6)) plt.scatter(theta_samples, omega_samples, s=5) plt.title('Poincar\u00e9 Section') plt.xlabel('\u03b8 (rad)') plt.ylabel('d\u03b8/dt (rad/s)') plt.grid(True) plt.show() \ud83d\udcc9 5. Optional: Bifurcation Diagram Try plotting steady-state angle values for a range of amplitudes \\(A\\) : def get_bifurcation_data(A_values, omega=2/3): points = [] for A in A_values: def pend(t, y): theta, v = y return [v, -0.1 * v - 1.5**2 * np.sin(theta) + A * np.cos(omega * t)] sol = solve_ivp(pend, (0, 300), [0.1, 0], t_eval=np.linspace(200, 300, 1000)) T_drive = 2*np.pi / omega for t in np.arange(250, 300, T_drive): idx = np.abs(sol.t - t).argmin() points.append((A, sol.y[0][idx])) return points A_values = np.linspace(1.0, 1.5, 200) data = get_bifurcation_data(A_values) A_vals, theta_vals = zip(*data) plt.figure(figsize=(10,5)) plt.plot(A_vals, theta_vals, ',k') plt.title('Bifurcation Diagram: A vs \u03b8') plt.xlabel('Driving Amplitude A') plt.ylabel('\u03b8') plt.grid(True) plt.show() \ud83d\udea7 6. Limitations & Extensions Limitation Extension Assumes constant \\(\\gamma, A, \\omega\\) Add time-dependent forcing Only single pendulum Model coupled pendulums Idealized Add friction, noise, or nonlinear damping","title":"Problem 2"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#problem-2","text":"Here is a full solution to your Forced Damped Pendulum project \u2014 including theoretical derivation, dynamic analysis, real-world relevance, and a Python implementation with plots and exploration tools. Ready to copy into a Markdown or Jupyter notebook!","title":"Problem 2"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#investigating-the-dynamics-of-a-forced-damped-pendulum","text":"","title":"\ud83c\udf00 Investigating the Dynamics of a Forced Damped Pendulum"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#1-theoretical-foundation","text":"","title":"\ud83d\udcd8 1. Theoretical Foundation"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#equation-of-motion","text":"The motion of a forced damped pendulum is described by the nonlinear second-order differential equation: \\[ \\frac{d^2\\theta}{dt^2} + \\gamma \\frac{d\\theta}{dt} + \\omega_0^2 \\sin\\theta = A \\cos(\\omega t) \\] Where: - \\(\\theta(t)\\) : angular displacement - \\(\\gamma\\) : damping coefficient - \\(\\omega_0 = \\sqrt{g/L}\\) : natural angular frequency - \\(A\\) : amplitude of external forcing - \\(\\omega\\) : angular frequency of the driving force","title":"Equation of Motion"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#small-angle-approximation","text":"For small oscillations ( \\(\\theta \\ll 1\\) ), we use \\(\\sin\\theta \\approx \\theta\\) , simplifying the equation to: \\[ \\frac{d^2\\theta}{dt^2} + \\gamma \\frac{d\\theta}{dt} + \\omega_0^2 \\theta = A \\cos(\\omega t) \\] This is a driven damped harmonic oscillator , solvable analytically.","title":"Small-Angle Approximation"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#general-solution-small-angles","text":"The solution consists of: - Transient (decays due to damping) - Steady-state (driven solution): \\[ \\theta(t) = \\theta_0 e^{-\\gamma t/2} \\cos(\\Omega t + \\phi) + B \\cos(\\omega t - \\delta) \\] Where: - \\(B = \\frac{A}{\\sqrt{(\\omega_0^2 - \\omega^2)^2 + (\\gamma \\omega)^2}}\\) - \\(\\delta = \\tan^{-1}\\left(\\frac{\\gamma \\omega}{\\omega_0^2 - \\omega^2}\\right)\\)","title":"General Solution (Small Angles)"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#resonance-condition","text":"Occurs when driving frequency \\(\\omega \\approx \\omega_0\\) . - System absorbs maximum energy. - Amplitude \\(B\\) reaches a peak. - Damping reduces resonance sharpness.","title":"Resonance Condition"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#2-analysis-of-dynamics","text":"","title":"\ud83d\udd2c 2. Analysis of Dynamics"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#effect-of-parameters","text":"Damping \\(\\gamma\\) : Low \\(\\gamma\\) : sustained oscillations. High \\(\\gamma\\) : motion dies out quickly. Driving Amplitude \\(A\\) : Small \\(A\\) : linear-like motion. Large \\(A\\) : complex, possibly chaotic behavior. Driving Frequency \\(\\omega\\) : Near resonance \u2192 large response. Far from resonance \u2192 low amplitude.","title":"Effect of Parameters"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#regular-vs-chaotic-motion","text":"Regular : predictable, periodic or quasiperiodic. Chaotic : sensitive to initial conditions, irregular, non-repeating. Transition to chaos happens by increasing \\(A\\) or tuning \\(\\omega\\) .","title":"Regular vs Chaotic Motion"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#3-real-world-applications","text":"Application Description \ud83c\udfd7\ufe0f Suspension Bridges External forcing (wind, traffic) causes oscillations \u26a1 RLC Circuits Analogous to pendulum with inductance/resistance \ud83d\udeb6 Biomechanics Human gait as forced pendulum \u2699\ufe0f Energy Harvesting Uses resonance for maximizing power","title":"\ud83e\udde0 3. Real-World Applications"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#4-python-implementation-simulation","text":"Below is a Python script using scipy and matplotlib .","title":"\ud83d\udcbb 4. Python Implementation (Simulation)"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#required-libraries","text":"import numpy as np import matplotlib.pyplot as plt from scipy.integrate import solve_ivp","title":"\ud83d\udd27 Required Libraries"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#simulation-function","text":"# Parameters gamma = 0.1 # damping omega0 = 1.5 # natural frequency (sqrt(g/L)) A = 1.2 # driving amplitude omega = 2/3 # driving frequency def pendulum(t, y): theta, dtheta = y d2theta = -gamma * dtheta - omega0**2 * np.sin(theta) + A * np.cos(omega * t) return [dtheta, d2theta]","title":"\ud83d\udd01 Simulation Function"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#solve-the-equation","text":"# Initial conditions theta0 = 0.2 dtheta0 = 0.0 t_span = (0, 100) t_eval = np.linspace(*t_span, 5000) sol = solve_ivp(pendulum, t_span, [theta0, dtheta0], t_eval=t_eval)","title":"\ud83e\uddea Solve the Equation"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#plot-time-evolution","text":"plt.figure(figsize=(10,4)) plt.plot(sol.t, sol.y[0], label='\u03b8(t)') plt.title('Forced Damped Pendulum - Angular Displacement Over Time') plt.xlabel('Time') plt.ylabel('Angle (rad)') plt.grid(True) plt.legend() plt.show()","title":"\ud83d\udcc8 Plot Time Evolution"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#phase-portrait","text":"plt.figure(figsize=(6,6)) plt.plot(sol.y[0], sol.y[1], lw=0.5) plt.title('Phase Portrait: \u03b8 vs d\u03b8/dt') plt.xlabel('\u03b8 (rad)') plt.ylabel('Angular velocity (rad/s)') plt.grid(True) plt.show()","title":"\ud83c\udf0c Phase Portrait"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#poincare-section","text":"Sample the state every period of the driving force: T_drive = 2 * np.pi / omega sample_times = np.arange(0, 100, T_drive) theta_samples = [] omega_samples = [] for t_sample in sample_times: index = np.abs(sol.t - t_sample).argmin() theta_samples.append(sol.y[0][index]) omega_samples.append(sol.y[1][index]) plt.figure(figsize=(6,6)) plt.scatter(theta_samples, omega_samples, s=5) plt.title('Poincar\u00e9 Section') plt.xlabel('\u03b8 (rad)') plt.ylabel('d\u03b8/dt (rad/s)') plt.grid(True) plt.show()","title":"\ud83c\udf00 Poincar\u00e9 Section"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#5-optional-bifurcation-diagram","text":"Try plotting steady-state angle values for a range of amplitudes \\(A\\) : def get_bifurcation_data(A_values, omega=2/3): points = [] for A in A_values: def pend(t, y): theta, v = y return [v, -0.1 * v - 1.5**2 * np.sin(theta) + A * np.cos(omega * t)] sol = solve_ivp(pend, (0, 300), [0.1, 0], t_eval=np.linspace(200, 300, 1000)) T_drive = 2*np.pi / omega for t in np.arange(250, 300, T_drive): idx = np.abs(sol.t - t).argmin() points.append((A, sol.y[0][idx])) return points A_values = np.linspace(1.0, 1.5, 200) data = get_bifurcation_data(A_values) A_vals, theta_vals = zip(*data) plt.figure(figsize=(10,5)) plt.plot(A_vals, theta_vals, ',k') plt.title('Bifurcation Diagram: A vs \u03b8') plt.xlabel('Driving Amplitude A') plt.ylabel('\u03b8') plt.grid(True) plt.show()","title":"\ud83d\udcc9 5. Optional: Bifurcation Diagram"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#6-limitations-extensions","text":"Limitation Extension Assumes constant \\(\\gamma, A, \\omega\\) Add time-dependent forcing Only single pendulum Model coupled pendulums Idealized Add friction, noise, or nonlinear damping","title":"\ud83d\udea7 6. Limitations &amp; Extensions"},{"location":"1%20Physics/2%20Gravity/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/2%20Gravity/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/2%20Gravity/Problem_2/","text":"Problem 2","title":"Problem 2"},{"location":"1%20Physics/2%20Gravity/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/2%20Gravity/Problem_3/","text":"Problem 3","title":"Problem 3"},{"location":"1%20Physics/2%20Gravity/Problem_3/#problem-3","text":"","title":"Problem 3"},{"location":"1%20Physics/3%20Waves/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/3%20Waves/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/5%20Circuits/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/5%20Circuits/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_2/","text":"Problem 2","title":"Problem 2"},{"location":"1%20Physics/6%20Statistics/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/7%20Measurements/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/7%20Measurements/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"2%20Mathematics/1%20Linear_algebra/","text":"Linear Algebra","title":"Linear Algebra"},{"location":"2%20Mathematics/1%20Linear_algebra/#linear-algebra","text":"","title":"Linear Algebra"},{"location":"2%20Mathematics/2%20Analytic_geometry/","text":"Analytic geometry","title":"Analytic geometry"},{"location":"2%20Mathematics/2%20Analytic_geometry/#analytic-geometry","text":"","title":"Analytic geometry"},{"location":"2%20Mathematics/3%20Calculus/","text":"Calculus","title":"Calculus"},{"location":"2%20Mathematics/3%20Calculus/#calculus","text":"","title":"Calculus"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_02%20Set_Theory/","text":"Set Theory","title":"Set Theory"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_02%20Set_Theory/#set-theory","text":"","title":"Set Theory"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_03%20Relations/","text":"Relations","title":"Relations"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_03%20Relations/#relations","text":"","title":"Relations"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_04%20Functions/","text":"Functions","title":"Functions"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_04%20Functions/#functions","text":"","title":"Functions"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_05%20Combinatorics/","text":"Combinatorics","title":"Combinatorics"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_05%20Combinatorics/#combinatorics","text":"","title":"Combinatorics"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_08%20Number_Theory/","text":"Number Theory","title":"Number Theory"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_08%20Number_Theory/#number-theory","text":"","title":"Number Theory"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_06%20Sequences_and_Series/","text":"Sequences and Series","title":"Sequences and Series"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_06%20Sequences_and_Series/#sequences-and-series","text":"","title":"Sequences and Series"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_07%20Induction/","text":"Induction","title":"Induction"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_07%20Induction/#induction","text":"","title":"Induction"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_09%20Recurrence/","text":"Recurrence","title":"Recurrence"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_09%20Recurrence/#recurrence","text":"","title":"Recurrence"},{"location":"3%20Discret_Mathematics/4%20Graph%20Theory%20and%20.../_10%20Graph_Theory/","text":"Graph Theory","title":"Graph Theory"},{"location":"3%20Discret_Mathematics/4%20Graph%20Theory%20and%20.../_10%20Graph_Theory/#graph-theory","text":"","title":"Graph Theory"},{"location":"3%20Discret_Mathematics/5%20Logic/_01%20Logic/","text":"Logic","title":"Logic"},{"location":"3%20Discret_Mathematics/5%20Logic/_01%20Logic/#logic","text":"","title":"Logic"}]}